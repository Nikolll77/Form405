unit Unit22;
interface
uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ExtCtrls;



type TCodepageArray = array[$80..$FF] of Char;

function ConvertEncoding(s: string): string;

const
 ruscii:TCodepageArray = ('À','Á','Â','Ã','Ä','Å','Æ','Ç','È','É','Ê',
 'Ë','Ì','Í','Î','Ï','Ð','Ñ','Ò','Ó','Ô','Õ','Ö','×','Ø','Ù','Ú','Û',
 'Ü','Ý','Þ','ß','à','á','â','ã','ä','å','æ','ç','è','é','ê','ë','ì',
 'í','î','ï',#176,#177,#178,#179,#180,#181,#182,#183,#184,#185,#186,
 #187,#188,#189,#190,#191,#192,#193,#194,#195,#196,#197,#198,#199,#200,
 #201,#202,#203,#204,#205,#206,#207,#208,#209,#210,#211,#212,#213,#214,
 #215,#216,#217,#218,#219,#220,#221,#222,#223,'ð','ñ','ò','ó','ô','õ',
 'ö','÷','ø','ù','ú','û','ü','ý','þ','ÿ','¨','¸','Ã','ã','ª','º','²',
 '³','¯','¿',#250,#251,#252,#253,#254,#255);

 koi8u:TCodepageArray = (#128,#129,#130,#131,#132,#133,#134,#135,#136,
 #137,#138,#139,#140,#141,#142,#143,#144,#145,#146,#147,#148,#149,#150,
 #151,#152,#153,#154,#155,#156,#157,#158,#159,#160,#161,#162,'¸','º',
 #165,'³','¿',#168,#169,#170,#171,#172,#173,#174,#175,#176,#177,#178,
 '¨','ª',#181,'²','¯',#184,#185,#186,#187,#188,#189,#190,#191,'þ','à',
 'á','ö','ä','å','ô','ã','õ','è','é','ê','ë','ì','í','î','ï','ÿ','ð',
 'ñ','ò','ó','æ','â','ü','û','ç','ø','ý','ù','÷','ú','Þ','À','Á','Ö',
 'Ä','Å','Ô','Ã','Õ','È','É','Ê','Ë','Ì','Í','Î','Ï','ß','Ð','Ñ','Ò', 
 'Ó','Æ','Â','Ü','Û','Ç','Ø','Ý','Ù','×','Ú' );

 utf8:TCodepageArray = (#128,#129,#130,#131,#132,#133,#134,#135,#136,
 #137,#138,#139,#140,#141,#142,#143,#144,#145,#146,#147,#148,#149,#150, 
 #151,#152,#153,#154,#155,#156,#157,#158,#159,#160,#161,#162,#163,#164,
 #165,#166,#167,#168,#169,#170,#171,#172,#173,#174,#175,#176,#177,#178, 
 #179,#180,#181,#182,#183,#184,#185,#186,#187,#188,#189,#190,#191,#192,
 #193,#194,#195,#196,#197,#198,#199,#200,#201,#202,#203,#204,#205,#206, 
 #207,#208,#209,#210,#211,#212,#213,#214,#215,#216,#217,#218,#219,#220,
 #221,#222,#223,#224,#225,#226,#227,#228,#229,#230,#231,#232,#233,#234, 
 #235,#236,#237,#238,#239,#240,#241,#242,#243,#244,#245,#246,#247,#248,
 #249,#250,#251,#252,#253,#254,#255); 

 iso88595:TCodepageArray = (#128,#129,#130,#131,#132,#133,#134,#135,#136, 
 #137,#138,#139,#140,#141,#142,#143,#144,#145,#146,#147,#148,#149,#150,
 #151,#152,#153,#154,#155,#156,#157,#158,#159,#160,'¨',#162,#163,'ª', 
 #165,'²','¯',#168,#169,#170,#171,#172,#173,#174,#175,'À','Á','Â','Ã',
 'Ä','Å','Æ','Ç','È','É','Ê','Ë','Ì','Í','Î','Ï','Ð','Ñ','Ò','Ó','Ô', 
 'Õ','Ö','×','Ø','Ù','Ú','Û','Ü','Ý','Þ','ß','à','á','â','ã','ä','å',
 'æ','ç','è','é','ê','ë','ì','í','î','ï','ð','ñ','ò','ó','ô','õ','ö',
 '÷','ø','ù','ú','û','ü','ý','þ','ÿ',#240,'¸',#242,#243,'º',#245,'³',
 '¿',#248,#249,#250,#251,#252,#253,#254,#255);

implementation 

{function ConvertEncoding(sIn: string; sCoding: string): string;
var
  iFtd: integer;
begin
  Result:='';
  for iFtd := 1 to length(sIn) do
    result := result + sCoding[ord(sIn[iFtd])];
end;}

function ConvertEncoding(s: string): string;
var i:byte;j:integer;
    A:TCodepageArray;
begin
  Result:='';
  A:=ruscii;
  For j:=1 to Length(S) do
     if Byte(S[j])>=Low(A) then
     For i:=Low(A) to High(A) do
     begin
        if Byte(S[j])=i then
        begin
           S[j]:=A[i];
           break;
        end;
     end;
  result:=s;
end;

end.


{
var SL:TStringList;i:byte;j:integer;
    S:String;
    A:TCodepageArray;
begin
SL:=TStringList.Create;
try 
SL.LoadFromFile(FileName.Text); 
S:=SL.Text; 
if CodeTable.ItemIndex=0 then A:=ruscii else 
if CodeTable.ItemIndex=1 then A:=koi8u else 
if CodeTable.ItemIndex=2 then A:=utf8 else 
if CodeTable.ItemIndex=3 then A:=iso88595; 
For j:=1 to Length(S) do
 if Byte(S[j])>=Low(A) then
  For i:=Low(A) to High(A) do
   begin
    if Byte(S[j])=i then
     begin
      S[j]:=A[i];
      break;
     end;
   end;
finally 
Memo1.Text:=S; 
SL.Free; 
end; 
end;     }
 